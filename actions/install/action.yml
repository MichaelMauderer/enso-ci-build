name: 'Install Enso Build'
description: 'Installs enso-build tool.'
inputs:
  clean:
    description: Whether the local build script repository should be cleaned.
    required: true
    default: 'false'

runs:
  using: "composite"
  steps:
    - name: Setup conda
      uses: s-weigand/setup-conda@v1.0.5
      if: startsWith(runner.name, 'GitHub Actions') # GitHub-hosted runner.
      with:
        update-conda: false
        conda-channels: anaconda, conda-forge
    - name: Install wasm-pack (macOS)
      env:
        WASMPACKURL: https://github.com/rustwasm/wasm-pack/releases/download/v0.10.2
        WASMPACKDIR: wasm-pack-v0.10.2-x86_64-apple-darwin
      run: |-
        curl -L "$WASMPACKURL/$WASMPACKDIR.tar.gz" | tar -xz -C .
        mv $WASMPACKDIR/wasm-pack ~/.cargo/bin
        rm -r $WASMPACKDIR
      shell: bash
      if: startsWith(runner.name, 'GitHub Actions') # GitHub-hosted runner.
    - uses: actions/checkout@v2
      with:
        repository: enso-org/enso
        path: enso

    - uses: actions/checkout@v2
      with:
        repository: enso-org/ci-build
        path: ci-build

    # Runs a set of commands using the runners shell
    - uses: actions/github-script@v6
      with:
        script: |-
          const path = require('path');
          console.warn(process.env);
          console.warn(context);
          core.addPath(String.raw`${{ runner.temp }}/bin`);
          let args = ['install', '--bins', 
              '--root', process.env["RUNNER_TEMP"],
              '--path', './build'
          ]; 
          let opts = {'cwd': path.resolve(process.env["GITHUB_WORKSPACE"], 'ci-build')};
          await exec.exec('cargo', args, opts);
          core.exportVariable("ACTIONS_RUNTIME_TOKEN", process.env["ACTIONS_RUNTIME_TOKEN"])
          core.exportVariable("ACTIONS_RUNTIME_URL", process.env["ACTIONS_RUNTIME_URL"])
          core.exportVariable("GITHUB_RETENTION_DAYS", process.env["GITHUB_RETENTION_DAYS"])
